{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js\";\nimport React from 'react';\nimport Post from \"./Post\";\n\nconst PostLoader = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      article: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default PostLoader;","map":{"version":3,"sources":["/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js"],"names":["React","Post","PostLoader","posts","map","post","getStaticProps","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5B,sBACI;AAAA,cACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAG,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,YAAjB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAOA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAML,KAAK,GAAG,MAAMI,GAAG,CAACE,IAAJ,EAApB,CAJmC,CAMnC;AACA;;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHP,MAAAA;AADG;AADJ,GAAP;AAKH;AACD,eAAeD,UAAf","sourcesContent":["import React from 'react';\nimport Post from \"./Post\";\nconst PostLoader = ({posts}) => {\n    return (\n        <div>\n            {posts.map(post=>(<Post article={post}/>))}\n        </div>\n    );\n};\nexport async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const posts = await res.json();\n\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n        props: {\n            posts,\n        },\n    }\n}\nexport default PostLoader;"]},"metadata":{},"sourceType":"module"}