{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js\";\nimport React from 'react';\n\nconst PostLoader = ({\n  articles\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: articles.map(article => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"article.name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default PostLoader;","map":{"version":3,"sources":["/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js"],"names":["React","PostLoader","articles","map","article","getStaticProps","res","fetch","posts","json","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC/B,sBACI;AAAA,cACKA,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAOA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAJmC,CAMnC;AACA;;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHF,MAAAA;AADG;AADJ,GAAP;AAKH;AACD,eAAeP,UAAf","sourcesContent":["import React from 'react';\n\nconst PostLoader = ({articles}) => {\n    return (\n        <div>\n            {articles.map(article=>(<h1>article.name</h1>))}\n        </div>\n    );\n};\nexport async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n    const posts = await res.json()\n\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n        props: {\n            posts,\n        },\n    }\n}\nexport default PostLoader;"]},"metadata":{},"sourceType":"module"}