{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js\";\nimport React from 'react';\nimport Post from \"./Post\";\n\nfunction PostLoader(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = PostLoader;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://jsonplaceholder.typicode.com/posts');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                posts: posts\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default PostLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostLoader\");","map":{"version":3,"sources":["/home/faiz/WebstormProjects/next-first-project/components/PostLoader.js"],"names":["React","Post","PostLoader","posts","map","post","title","getStaticProps","fetch","res","json","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,UAAT,OAA+B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAC3B,sBACI;AAAA,cACKA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,0BACP;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,eADO;AAAA,KAAV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CAED;AACA;AACA;;;KAZSJ,U;AAaT,gBAAsBK,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGeC,KAAK,CAAC,4CAAD,CAHpB;;AAAA;AAGGC,YAAAA,GAHH;AAAA;AAAA,mBAIiBA,GAAG,CAACC,IAAJ,EAJjB;;AAAA;AAIGP,YAAAA,KAJH;AAAA,6CAQI;AACHQ,cAAAA,KAAK,EAAE;AACHR,gBAAAA,KAAK,EAALA;AADG;AADJ,aARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeP,eAAeD,UAAf","sourcesContent":["import React from 'react';\nimport Post from \"./Post\";\nfunction PostLoader({ posts }) {\n    return (\n        <ul>\n            {posts.map((post) => (\n                <li>{post.title}</li>\n            ))}\n        </ul>\n    )\n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n    const posts = await res.json()\n\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n        props: {\n            posts,\n        },\n    }\n}\n\nexport default PostLoader"]},"metadata":{},"sourceType":"module"}